{"version":3,"file":"static/js/221.1a610ded.chunk.js","mappings":"wNAoEA,UAhEe,WACb,OAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEA,GAA8BC,EAAAA,EAAAA,UAASF,EAAaG,IAAI,UAAY,IAApE,eAAOC,EAAP,KAAgBC,EAAhB,KAEA,GAAwBH,EAAAA,EAAAA,UACtB,8NADKI,GAAP,eAGA,GAAkCJ,EAAAA,EAAAA,UAAS,IAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAW,mCAAG,+FACZC,EADY,0DAC6CR,EAD7C,gEAIOS,MAAMD,EAAK,CAChCE,QAAS,CACPR,cAAeA,KANH,cAIVS,EAJU,gBASGA,EAASC,OATZ,OASVC,EATU,OAUhBT,EAAaS,EAAKC,SAVF,kDAYhBC,QAAQC,IAAR,MAZgB,0DAAH,qDAiCjB,OAJAC,EAAAA,EAAAA,YAAU,WACRV,GACD,GAAE,CAACL,KAGF,4BACE,kBAAOgB,KAAK,OAAOC,MAAOnB,EAASoB,SAnBtB,SAAAC,GAGf,GAFApB,EAAWoB,EAAEC,cAAcH,OAEG,KAA1BE,EAAEC,cAAcH,MAClB,OAAOtB,EAAgB,CAAC,EAE3B,KAcG,mBAAQqB,KAAK,SAASK,QAZL,WACnB1B,EAAgB,CAAE2B,MAAOxB,IACzBO,GACD,EASG,qBAGA,wBACGJ,EAAUsB,KAAI,SAAAC,GAAK,OAClB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMzB,GAAhD,SACGqB,EAAMK,kBAFFL,EAAME,GADG,QAU3B,C,sBClED,SAASI,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBpB,EAAQqB,EAAKrB,KAInB,CAHE,MAAOsB,GAEP,YADAN,EAAOM,EAET,CAEID,EAAKE,KACPR,EAAQf,GAERwB,QAAQT,QAAQf,GAAOyB,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMjB,GACba,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQlB,EAClE,CAEA,SAASkB,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [movieId, setMovieId] = useState(searchParams.get('query') || '');\n\n  const [Authorization] = useState(\n    'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3MmViMDFhN2ZiZmFlZTdjYWIwZTJiZDhmZDhmYzlmNCIsInN1YiI6IjY0YTk1N2ZkNjZhMGQzMDBhZGU3OTA4MSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.6gTrA7E0aFwiAj4I4QiDPa4c-e38boHWSycRPAb_8LY'\n  );\n  const [movieList, setMovieList] = useState([]);\n\n  const location = useLocation();\n\n  const searchMovie = async () => {\n    const url = `https://api.themoviedb.org/3/search/movie?query=${movieId}&include_adult=false&language=en-US&page=1`;\n\n    try {\n      const response = await fetch(url, {\n        headers: {\n          Authorization: Authorization,\n        },\n      });\n      const data = await response.json();\n      setMovieList(data.results);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updQuery = e => {\n    setMovieId(e.currentTarget.value);\n\n    if (e.currentTarget.value === '') {\n      return setSearchParams({});\n    }\n  };\n\n  const handleSearch = () => {\n    setSearchParams({ query: movieId });\n    searchMovie();\n  };\n\n  useEffect(() => {\n    searchMovie();\n  }, [Authorization]);\n\n  return (\n    <div>\n      <input type=\"text\" value={movieId} onChange={updQuery} />\n      <button type=\"button\" onClick={handleSearch}>\n        Search\n      </button>\n      <ul>\n        {movieList.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.original_title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useSearchParams","searchParams","setSearchParams","useState","get","movieId","setMovieId","Authorization","movieList","setMovieList","location","useLocation","searchMovie","url","fetch","headers","response","json","data","results","console","log","useEffect","type","value","onChange","e","currentTarget","onClick","query","map","movie","to","id","state","from","original_title","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}